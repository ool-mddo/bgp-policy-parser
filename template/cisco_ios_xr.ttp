<macro>
def split_by_conditions(data):
    item = {}
    if "and" in data:
        item["op"] = "and"
        item["matches"] = [ x.strip() for x in data.split(" and ")]
    elif "or" in data:
        item["op"] = "or"
        item["matches"] = [ x.strip() for x in data.split(" or ")]
    else:
        item["op"] = "state"
        item["matches"] = [ data.strip()]
    return item

def strip_whitespace(data):
    return data.strip()

def split_by_line(data):
    return data.split('\n')
</macro>

<group name="prefix-set">
prefix-set {{ name | _start_ }}
  <group name="prefixes*">
  {{ prefix }} {{ condition }} {{ length }},
  </group>
  <group name="prefixes*">
  {{ prefix }} {{ condition }} {{ length }}
  </group>
  <group name="prefixes*">
  {{ prefix }},
  </group>
  <group name="prefixes*">
  {{ prefix }}
  </group>
end-set {{ _end_ }}
</group>

<group name="as-path-set">
as-path-set {{ name | _start_ }}
  <group name="conditions">
  ios-regex {{ pattern | _line_ }}
  </group>
  <group name="conditions">
  length {{ condition }} {{ length }}
  </group>
end-set {{ _end_ }}
</group>

<group name="community-set">
community-set {{ name | _start_ }}
  <group name="communities*">
  {{ community }},
  </group>
  <group name="communities*">
  {{ community }}
  </group>
  <group name="communities*">
  ios-regex '{{ pattern }}'
  </group>
end-set {{ _end_ }}
</group>


<group name="policies">
route-policy {{ name | _start_ }}
  <group name="apply">
  apply {{ policy }}
  </group>
  <group name="conditions*">
  ## if,elseif
  {{ if | re("(else)?(if)?") | _start_ }} {{ condition | _line_ | macro(split_by_conditions) }} then
    <group name="apply">
    apply {{ policy }}
    </group>
    <group name="actions*">
    {{ action | _line_ }}
    </group>
  {{ fi | re("(endif)?(else)?(elseif)?") | _end_ }}
  ## else
  {{ if | re("(else)?") | _start_ }} 
    <group name="apply">
    apply {{ policy }}
    </group>
    <group name="actions*">
    {{ action | _line_ }}
    </group>
  {{ fi | re("(endif)?") | _end_ }}
  </group>
  <group name="default.actions*">
  {{ action | re("(set)?(delete)?")| _exact_space_ }} {{ attr }} {{ value | _line_ }}
  </group>
  <group name="default.actions*">
  {{ action | re("(pass)?(drop)?(done)?") | _exact_space_ }}
  </group>
! {{ _end_ }}
</group>